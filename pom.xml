<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.5</version>
    <relativePath/>
  </parent>

  <groupId>com.vote</groupId>
  <artifactId>demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>demo</name>
  <description>Demo project using DAO and SQLite</description>

  <properties>
    <java.version>17</java.version>
  </properties>

  <dependencies>
    <!-- Spring Boot Web -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- SQLite JDBC -->
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
    </dependency>

    <!-- Spring Boot Thymeleaf -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>

    <!-- Spring Boot Test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Selenium para pruebas GUI -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
    </dependency>

    <!-- Soporte para RemoteWebDriver -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-remote-driver</artifactId>
    </dependency>

    <!-- Soporte adicional de Selenium -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-support</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Plugin de Spring Boot -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin JMeter -->
      <plugin>
        <groupId>com.lazerycode.jmeter</groupId>
        <artifactId>jmeter-maven-plugin</artifactId>
        <version>3.4.0</version>

        <executions>
          <!-- Configuración previa -->
          <execution>
            <id>configuration</id>
            <goals>
              <goal>configure</goal>
            </goals>
          </execution>
          <!-- Ejecución de pruebas -->
          <execution>
            <id>jmeter-tests</id>
            <phase>test</phase>
            <goals>
              <goal>jmeter</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <testFilesDirectory>src/test/java/com/vote/demo/carga</testFilesDirectory>
          <testFilesIncluded>
            <jMeterTestFile>HTTP Request.jmx</jMeterTestFile>
          </testFilesIncluded>
          <resultsOutputIsCSV>false</resultsOutputIsCSV>
          <generateReports>false</generateReports>
          <logRootDirectory>${basedir}/src/test/java/com/vote/demo/carga</logRootDirectory>
          <resultLogFilename>results.jtl</resultLogFilename>
          <jmeterLogFilename>jmeter.log</jmeterLogFilename>
        </configuration>
      </plugin>

      <!-- Plugin para copiar logs desde /target a tu carpeta -->
      <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-antrun-plugin</artifactId>
		<version>3.1.0</version>
		<executions>
			<execution>
			<id>move-jmeter-logs</id>
			<phase>verify</phase>
			<configuration>
				<target>
				<!-- Eliminar archivos anteriores si existen -->
				<delete file="${basedir}/src/test/java/com/vote/demo/carga/jmeter.log" failonerror="false"/>
				<delete file="${basedir}/src/test/java/com/vote/demo/carga/results.jtl" failonerror="false"/>

				<!-- Copiar nuevos archivos -->
				<copy file="${project.build.directory}/jmeter/logs/HTTP Request.jmx.log"
						tofile="${basedir}/src/test/java/com/vote/demo/carga/jmeter.log"
						overwrite="true" failonerror="false"/>
				<copy file="${project.build.directory}/jmeter/results/20250512-HTTP Request.csv"
						tofile="${basedir}/src/test/java/com/vote/demo/carga/results.jtl"
						overwrite="true" failonerror="false"/>
				</target>
			</configuration>
			<goals>
				<goal>run</goal>
			</goals>
			</execution>
		</executions>
	</plugin>

	<!-- Postman y Newman -->
	<plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>exec-maven-plugin</artifactId>
		<version>3.1.0</version>
		<executions>
			<execution>
			<id>postman-tests</id>
			<phase>verify</phase> <!-- en vez de test -->
			<goals>
				<goal>exec</goal>
			</goals>
			</execution>
		</executions>
		<configuration>
			<executable>docker</executable>
			<arguments>
			<argument>run</argument>
			<argument>--rm</argument>
			<argument>-v</argument>
			<argument>${project.basedir}/src/test/java/com/vote/demo/postman:/etc/newman</argument>
			<argument>postman/newman</argument>
			<argument>run</argument>
			<argument>/etc/newman/vote-demo.postman_collection.json</argument>
			</arguments>
		</configuration>
		</plugin>


    </plugins>
  </build>

</project>